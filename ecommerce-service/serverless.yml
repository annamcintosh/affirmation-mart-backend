service:
  name: affirmation-mart-backend

plugins:
  - serverless-bundle
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  environment:
    AFFIRMATION_TABLE_NAME: ${self:custom.AffirmationTable.name}
    MAIL_QUEUE_URL: ${self:custom.MailQueue.url}
  iamRoleStatements:
    - ${file(iam/AffirmationTableIAM.yml):AffirmationTableIAM}
    - ${file(iam/MailQueueIAM.yml):MailQueueIAM}

resources:
  Resources:
    AffirmationTable: ${file(resources/AffirmationTable.yml):AffirmationTable}

functions:
#  PRODUCTS 
  createProduct:
    handler: src/handlers/createProduct.handler
    events:
      - http:
          method: POST
          path: /product
  getProducts:
    handler: src/handlers/getProducts.handler
    events:
      - http:
          method: GET
          path: /products
  getProduct:
    handler: src/handlers/getProduct.handler
    events:
      - http:
          method: GET
          path: /product/{id}
  updateProductStock:
    handler: src/handlers/updateProductStock.handler
    events:
      - http:
          method: PATCH
          path: /product/{id}/update

  # ORDERS          
  getOrder:
    handler: src/handlers/getOrder.handler
    events:
      - http:
          method: GET
          path: /order/{id}
  getOrderByUserId:
    handler: src/handlers/getOrderByUserId.handler
    events:
      - http:
          method: GET
          path: /order/user/{id}
  createOrder:
    handler: src/handlers/createOrder.handler
    events:
      - http:
          method: POST
          path: /order
  addProductToOrder:
    handler: src/handlers/addProductToOrder.handler
    events:
      - http:
          method: PATCH
          path: /order/add/{id}
  removeProductFromOrder:
    handler: src/handlers/removeProductFromOrder.handler
    events:
      - http:
          method: PATCH
          path: /order/remove/{id}
  placeOrder:
    handler: src/handlers/placeOrder.handler
    events:
      - http:
          method: PATCH
          path: /order/place/{id}

  # UTILITY
# processDailyRefresh:
  # handler: src/handlers/processDailyRefresh.handler
  # events:
  #   - schedule: cron(0 0 * * ? *)

  # AUTHENTICATION        
  autheticateUser:
    handler: src/handlers/createUser.handler
    events:
      - http:
          method: POST
          path: /auth      
  getUser:
    handler: src/handlers/getUser.handler
    events:
      - http:
          method: POST
          path: /auth/user
  registerUser:
    handler: src/handlers/registerUser.handler
    events:
      - http:
          method: POST
          path: /users   
          
custom:
  AffirmationTable:
    name: !Ref AffirmationTable
    arn: !GetAtt AffirmationTable.Arn
  MailQueue:
    arn: ${cf:notification-service-${self:provider.stage}.MailQueueArn}
    url: ${cf:notification-service-${self:provider.stage}.MailQueueUrl}
  bundle:
    linting: false
